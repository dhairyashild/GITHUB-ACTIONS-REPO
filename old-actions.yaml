### github marketplace actions needed
#   1) Checkout
#   2) Setup Java JDK New ---  this add java & maven
#   3) Official SonarQube Scan ---- secrets to add 1st  (SONAR_TOKEN  , SONAR_HOST_URL:9000  )                                                             ---devops coach link==https://youtu.be/AYl3A3ac7bg?si=lzDFIaX0Fh2RhUkn

name: Java CI/CD with SonarQube, JFrog, Docker, and AWS ECR

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:                          ### this for manual start of pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4   ### search setup-java on github actions marketplace and searc code for maven there u get java with cache maven which add maven also
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Maven Clean Install
        run: mvn clean install -DskipTests=true   #### install used  instead of maven as it creates artefacts in .M2 folder which path used in artefact uploading in jfrog
                                                  #### -DskipTests=true tells Maven to bypass the execution of any unit or integration tests 
      - name: Maven Test
        run: mvn test

  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@<action version> # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}


